/*/////////////////////////////////////////////////////////////////
ExtendedXML class
Created by: Derek Donnelly
Date: 12/01/2004 
*//////////////////////////////////////////////////////////////////

// Import all necessary classes ///////////////////////////////////
///////////////////////////////////////////////////////////////////

// Define class ///////////////////////////////////////////////////
class com.derekdonnelly.utils.ExtendedXML extends XML
{
	// Define class vars //////////////////////////////////////////
	private var $LH:String;
	private var $PH:String;
	private var $ERN:String;
	private var $val:Boolean;
	//
	private var $owner:Object;
	private var $compiled:Boolean;
	private var $error:Error;
	///////////////////////////////////////////////////////////////
	
	// Class constructor //////////////////////////////////////////	
	public function ExtendedXML(owner:Object, LH:String, ERN:String, PH:String)
	{
		// Capture arguments //////////////////////////////////////
		$owner = owner;
		$LH = LH;
		$ERN = ERN.toLowerCase();
		$val = ($ERN) ? true : false;
		$PH = PH;
		///////////////////////////////////////////////////////////
		
		// Set class variables/properties /////////////////////////
		ignoreWhite = true;
		///////////////////////////////////////////////////////////
	}
	///////////////////////////////////////////////////////////////	
	
	// Bind the onLoad event //////////////////////////////////////
	private function onLoad(success:Boolean):Void
	{
		if($val) valRes(this, success);
		else $owner[$LH](this, success, $PH);
	}
	///////////////////////////////////////////////////////////////	
	
	// Validate response //////////////////////////////////////////
	private function valRes(data:Object, success:Boolean):Void
	{
		// Try ////////////////////////////////////////////////////////	
		try
		{	
			// Check load success and validate xml ////////////////////////
			if(!success) throw new Error("Couldn't load the " + $ERN + " xml file.");
			if(data.status != 0) throw new Error("The " + $ERN + " xml file was invalid. Error:" + data.status);
			if(data.firstChild.nodeName.toLowerCase() != $ERN) throw new Error("There was no expected entries in the " + $ERN + " xml file.");
			///////////////////////////////////////////////////////////////
		}
		catch(e:Error)
		{
			// Save error information /////////////////////////////////////
			error = e;
			///////////////////////////////////////////////////////////////
			
			// Set success status /////////////////////////////////////////
			success = false;
			///////////////////////////////////////////////////////////////
			
			var msg:String = "\n ExtendedXML, error:" + error.toString() + ", data:" + data.toString() + ". \n";
			_root.debug_txt.text += msg;
			trace(msg);
		}
		finally
		{			
			// Set the compiled status of the class ///////////////////////
			compiled = success;
			///////////////////////////////////////////////////////////////
			
			// Call owners load handler ///////////////////////////////////
			$owner[$LH](this, success, $PH);
			///////////////////////////////////////////////////////////////
		}
		///////////////////////////////////////////////////////////////
	}
	///////////////////////////////////////////////////////////////
	
	// GET/SET METHODS ////////////////////////////////////////////
	
	// Get/Set - Compiled status //////////////////////////////////
	public function get compiled():Boolean
	{
  		return $compiled;
	}
	public function set compiled(bool:Boolean):Void
	{
		$compiled = bool;
	}
	///////////////////////////////////////////////////////////////
	
	// Get/Set - Error ////////////////////////////////////////////
	public function get error():Error
	{
		return $error;
	}
	public function set error(err:Error):Void
	{
		$error = err;
	}
	///////////////////////////////////////////////////////////////
	
	// END OF - GET/SET METHODS ///////////////////////////////////
}
///////////////////////////////////////////////////////////////////